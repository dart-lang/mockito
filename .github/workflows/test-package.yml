name: Dart CI

on:
  # Run on PRs and pushes to the default branch.
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    - cron: "0 0 * * 0"

env:
  PUB_ENVIRONMENT: bot.github

permissions: read-all

jobs:
  # Check code formatting with the stable SDK.
  format:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9
      - uses: dart-lang/setup-dart@d6a63dab3335f427404425de0fbfed4686d93c4f
        with:
          sdk: 2.19.0
      - id: install
        name: Install dependencies
        run: dart pub get
      - name: Check formatting
        run: dart format --output=none --set-exit-if-changed .
        
  # Check static analysis against stable and dev SDKs.
  analyze:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        sdk: [2.19.0, dev]
    steps:
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9
      - uses: dart-lang/setup-dart@d6a63dab3335f427404425de0fbfed4686d93c4f
        with:
          sdk: ${{ matrix.sdk }}
      - id: install
        name: Install dependencies
        run: dart pub get
      - name: Build generated artifacts
        run: dart pub run build_runner build
      - name: Analyze code
        run: dart analyze

  # Run tests against stable and dev SDKs.
  test:
    needs: analyze
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        sdk: [2.19.0, dev]
    steps:
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9
      - uses: dart-lang/setup-dart@d6a63dab3335f427404425de0fbfed4686d93c4f
        with:
          sdk: ${{ matrix.sdk }}
      - id: install
        name: Install dependencies
        run: dart pub get
      - name: Run VM tests
        run: dart run build_runner test -- --platform vm
        if: always() && steps.install.outcome == 'success'
      - name: Run DDC build
        run: dart run build_runner build --fail-on-severe
        if: always() && steps.install.outcome == 'success'
      - name: Run DDC tests
        run: dart run build_runner test -- --platform chrome
        if: always() && steps.install.outcome == 'success'

  document:
    needs: analyze
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9
      - uses: dart-lang/setup-dart@d6a63dab3335f427404425de0fbfed4686d93c4f
        with:
          sdk: dev
      - id: install
        name: Install dependencies
        run: |
          dart pub get
          dart pub global activate dartdoc
      - name: Verify dartdoc
        run: dart pub global run dartdoc \
          --no-generate-docs \
          --errors=unresolved-doc-reference,ambiguous-doc-reference,ambiguous-reexport,broken-link,deprecated,no-library-level-docs,unknown-directive,unknown-macro
        if: always() && steps.install.outcome == 'success'
